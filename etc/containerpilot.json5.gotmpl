{
  consul: '{{env "CONSUL_URL"}}',
  jobs: [
    {name: 'setup', exec: 'bin/setup', logging: {raw: true}},
    {
      name: 'exitOnSetupFail',
      exec: 'pkill containerpilot',
      logging: {raw: true},
      when: {source: 'setup', once: 'exitFailed'}
     },
{{- if (eq (env "WATCH") "1")}}
    {
      name: 'watch-build',
      exec: 'bin/watch-build',
      logging: {raw: true},
      when: {source: 'setup', once: 'exitSuccess'},
      restarts: 'unlimited'
    },
    {
      name: 'livereload',
      exec: 'bin/livereload',
      logging: {raw: true},
      when: {source: 'setup', once: 'exitSuccess'},
      restarts: 'unlimited'
    },
{{- end}}
    {
      name: '{{env "CONSUL_SERVICE_NAME"}}-api',
      exec: 'bin/api',
      logging: {raw: true},
      when: {source: 'setup', once: 'exitSuccess'},
{{- if env "CONSUL_URL"}}
      port: 8080,
      health: {
        exec: 'curl -fsSo /dev/null localhost:8080/healthz',
        interval: 5,
        ttl: 10,
        timeout: '5s'
      },
      consul: {
        deregisterCriticalServiceAfter: '10m'
      },
  {{- if env "CONSUL_SERVICE_TAGS"}}
      tags: ["{{env "CONSUL_SERVICE_TAGS" | split "," | join "\", \""}}"],
  {{- end}}
{{- end}}
      restarts: 'unlimited'
    },
    {
      name: '{{env "CONSUL_SERVICE_NAME"}}-client',
      exec: 'bin/client',
      logging: {raw: true},
      when: {source: 'setup', once: 'exitSuccess'},
{{- if env "CONSUL_URL"}}
      port: 80,
      health: {
        exec: 'curl -fsSo /dev/null localhost',
        interval: 5,
        ttl: 10,
        timeout: '5s'
      },
      consul: {
        deregisterCriticalServiceAfter: '10m'
      },
  {{- if env "CONSUL_SERVICE_TAGS"}}
      tags: ["{{env "CONSUL_SERVICE_TAGS" | split "," | join "\", \""}}"],
  {{- end}}
{{- end}}
      restarts: 'unlimited'
    }
  ]
}
